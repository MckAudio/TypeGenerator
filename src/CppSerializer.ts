import { ISerializer, SerializerData } from "./ISerializer";
import { GetDate } from "./tools";
import { ArrayType, ClassType, LinkType, SimpleType } from "./types";

export class CppSerializer extends ISerializer {
    protected extension: string = "cpp";

    private includes: Array<string> = [];

    protected begin() {
        this.store.header = `/**\n * @file ${this.namespaceName}.${this.extension}\n`;
        this.store.header += ` * @author ${this.author}\n * @brief Autogenerated by MckAudio TypeGenerator\n`;
        this.store.header += ` * @date ${GetDate()}\n */\n\n`;
        this.store.header += `#include "${this.namespaceName}.hpp"\n\n`;
        this.store.header += `namespace ${this.namespaceName} {\n`;

        this.store.footer = `} // namespace ${this.namespaceName}\n`;
    }

    protected end() {
    }

    addClassMember(name: string, member: ClassType) {
    }

    addSimpleMember(className: string, name: string, member: SimpleType) {

    }

    addLinkMember(className: string, name: string, member: LinkType) {

    }

    addArrayMember(className: string, name: string, member: ArrayType) {

    }

}